{"version":3,"file":"static/js/861.52a1ffaa.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/Form/Form.js","pages/MoviesPage/MoviesPage.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n  justify-content: center;\n`;\n\nexport const Li = styled.li`\n  list-style: none;\n  padding: 15px;\n  margin: 0;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  text-align: center;\n  width: 200px;\n  height: 355px;\n\n  :hover {\n    scale: 1.1;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 250px;\n`;\n\nexport const PosterTitle = styled.p`\n  font-size: 20px;\n`;","import { useLocation } from 'react-router-dom';\nimport { List, Li, Card, Img, PosterTitle } from './MovieList.styled';\nimport { Link } from 'react-router-dom';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, name, poster_path }) => (\n          <Li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Card>\n                  {poster_path ? (\n                    <Img\n                      src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                      alt={title ?? name}\n                    />\n                  ) : (\n                    <Img src={defaultImg} alt={title ?? name} />\n                  )}\n                  <PosterTitle>{title ?? name}</PosterTitle>\n                </Card>\n            </Link>\n          </Li>\n        ))}\n      </List>\n    </>\n  );\n};","import { useState } from 'react';\n\nexport const Form = ({ setsearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    setsearchParams({ query });\n    event.currentTarget.reset();\n  };\n\n  const getSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        onChange={getSearchParams}\n        placeholder=\"Search movies\"\n      />\n      <button type=\"submit\" disabled={!query}>\n        Search\n      </button>\n    </form>\n  );\n};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from '../../components/API/API';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { Form } from '../../components/Form/Form';\n\nexport default function MoviesPage() {\n  const [movies, setmovies] = useState([]);\n  const [searchParams, setsearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) {\n      return;\n    }\n    async function getMovies() {\n      try {\n        const fetchedMovies = await getMovieByQuery(currentQuery);\n        setmovies(fetchedMovies);\n      } catch (error) {}\n    }\n    getMovies();\n  }, [searchParams]);\n\n  return (\n    <>\n      <Form setsearchParams={setsearchParams} />\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n}"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Li","_templateObject2","Card","_templateObject3","Img","_templateObject4","PosterTitle","_templateObject5","MovieList","_ref","movies","location","useLocation","_jsx","_Fragment","children","map","_ref2","id","title","name","poster_path","Link","to","concat","state","from","_jsxs","src","alt","Form","setsearchParams","_useState","useState","_useState2","_slicedToArray","query","setQuery","onSubmit","event","preventDefault","currentTarget","reset","type","autoComplete","autoFocus","onChange","value","target","placeholder","disabled","MoviesPage","setmovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","useEffect","currentQuery","get","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovies","_context","prev","next","getMovieByQuery","sent","t0","stop","apply","arguments","getMovies","length"],"sourceRoot":""}