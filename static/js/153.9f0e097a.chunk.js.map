{"version":3,"file":"static/js/153.9f0e097a.chunk.js","mappings":"8MAEaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yGAQhBC,EAAKH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+DAMdG,EAAOL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,6KAajBK,EAAMP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2BAIhBO,EAAcT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8B,iBC1BtBS,EAAY,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACjB,EAAI,CAAAmB,SACFL,EAAOM,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAMC,EAAWJ,EAAXI,YAAW,OACzCR,EAAAA,EAAAA,KAACb,EAAE,CAAAe,UACDF,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaN,GAAMO,MAAO,CAAEC,KAAMf,GAAWI,UACjDY,EAAAA,EAAAA,MAACzB,EAAI,CAAAa,SAAA,CACFM,GACCR,EAAAA,EAAAA,KAACT,EAAG,CACFwB,IAAG,kCAAAJ,OAAoCH,GACvCQ,IAAU,OAALV,QAAK,IAALA,EAAAA,EAASC,KAGhBP,EAAAA,EAAAA,KAACT,EAAG,CAACwB,IAjBvB,8EAiBwCC,IAAU,OAALV,QAAK,IAALA,EAAAA,EAASC,KAEtCP,EAAAA,EAAAA,KAACP,EAAW,CAAAS,SAAO,OAALI,QAAK,IAALA,EAAAA,EAASC,UAXtBF,EAcJ,OAKf,C,gJC9BaY,E,OAAiBjC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gF,SCGzB,SAASgC,IACtB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCtB,EAAMwB,EAAA,GAAEE,EAASF,EAAA,GAYxB,OAVAG,EAAAA,EAAAA,YAAU,WACgB,SAAAC,IAKvB,OALuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEgCC,EAAAA,EAAAA,MAAoB,KAAD,EAAzCJ,EAAaC,EAAAI,KACnBX,EAAUM,GAAeC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,iCAAAA,EAAAM,OAAA,GAAAR,EAAA,mBAE5BS,MAAA,KAAAC,UAAA,EANc,WACSb,EAAAY,MAAC,KAADC,UAAA,CAMxBC,EACF,GAAG,KAGDzB,EAAAA,EAAAA,MAACG,EAAc,CAAAf,SAAA,EACbF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJF,EAAAA,EAAAA,KAACL,EAAAA,EAAS,CAACE,OAAQA,MAGzB,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n  justify-content: center;\n`;\n\nexport const Li = styled.li`\n  list-style: none;\n  padding: 15px;\n  margin: 0;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  text-align: center;\n  width: 200px;\n  height: 355px;\n\n  :hover {\n    scale: 1.1;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 250px;\n`;\n\nexport const PosterTitle = styled.p`\n  font-size: 20px;\n`;","import { useLocation } from 'react-router-dom';\nimport { List, Li, Card, Img, PosterTitle } from './MovieList.styled';\nimport { Link } from 'react-router-dom';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, name, poster_path }) => (\n          <Li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Card>\n                  {poster_path ? (\n                    <Img\n                      src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                      alt={title ?? name}\n                    />\n                  ) : (\n                    <Img src={defaultImg} alt={title ?? name} />\n                  )}\n                  <PosterTitle>{title ?? name}</PosterTitle>\n                </Card>\n            </Link>\n          </Li>\n        ))}\n      </List>\n    </>\n  );\n};","import styled from 'styled-components';\n\nexport const StyledHomePage = styled.div`\n  text-align: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from '../../components/API/API';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { StyledHomePage } from './HomePage.styled';\n\nexport default function HomePage() {\n  const [movies, setmovies] = useState([]);\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        const fetchedMovies = await getTrendingMovies();\n        setmovies(fetchedMovies);\n      } catch (error) {}\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <StyledHomePage>\n      <h1>Trending Films</h1>\n      <MovieList movies={movies} />\n    </StyledHomePage>\n  );\n}"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Li","_templateObject2","Card","_templateObject3","Img","_templateObject4","PosterTitle","_templateObject5","MovieList","_ref","movies","location","useLocation","_jsx","_Fragment","children","map","_ref2","id","title","name","poster_path","Link","to","concat","state","from","_jsxs","src","alt","StyledHomePage","HomePage","_useState","useState","_useState2","_slicedToArray","setmovies","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovies","_context","prev","next","getTrendingMovies","sent","t0","stop","apply","arguments","getMovies"],"sourceRoot":""}